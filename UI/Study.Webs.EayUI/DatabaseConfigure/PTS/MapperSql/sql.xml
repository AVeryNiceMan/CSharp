<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="WH.Moddle" xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Menu" type="Study.Entity.Common.Menu, Study.Entity"/>
    <typeAlias alias="Staff" type="Study.Entity.Staff, Study.Entity"/>
    <typeAlias alias="Application" type="Study.Entity.Application, Study.Entity"/>
    <typeAlias alias="ApplicationDto" type="Study.Entity.ApplicationDto, Study.Entity"/>
    <typeAlias alias="MoneyOutDto" type="Study.Entity.MoneyOutDto, Study.Entity"/>
    <typeAlias alias="MoneyOutQuery" type="Study.Entity.MoneyOutQuery, Study.Entity"/>
    <typeAlias alias="MoneyOut" type="Study.Entity.MoneyOut, Study.Entity"/>
    <typeAlias alias="MoneyKind" type="Study.Entity.MoneyKind, Study.Entity"/>
    <typeAlias alias="MoneyKindQuery" type="Study.Entity.MoneyKindQuery, Study.Entity"/>
    <typeAlias alias="MoneyKindDto" type="Study.Entity.MoneyKindDto, Study.Entity"/>
    <typeAlias alias="SportRecord" type="Study.Entity.SportRecord, Study.Entity"/>
    <typeAlias alias="SportRecordQuery" type="Study.Entity.SportRecordQuery, Study.Entity"/>
    <typeAlias alias="SportRecordDto" type="Study.Entity.SportRecordDto, Study.Entity"/>
    <typeAlias alias="SportKind" type="Study.Entity.SportKind, Study.Entity"/>
    <typeAlias alias="SportKindQuery" type="Study.Entity.SportKindQuery, Study.Entity"/>
    <typeAlias alias="SportKindDto" type="Study.Entity.SportKindDto, Study.Entity"/>
    <typeAlias alias="AppUsers" type="Study.Entity.AppUsers, Study.Entity"/>
    <typeAlias alias="AppUsersQuery" type="Study.Entity.AppUsersQuery, Study.Entity"/>
    <typeAlias alias="AppUsersDto" type="Study.Entity.AppUsersDto, Study.Entity"/>
  </alias>
  <cacheModels >
    <cacheModel id="TestCache" type ="Fifo" flushInterval="6000" share ="true">
      <flushOnExecute  statement ="qMenus"/>
    </cacheModel>
  </cacheModels>
  <statements>
    <select id="qApplication" resultClass="ApplicationDto" parameterClass="Application">
      SELECT [ApplicationId] as Id
      ,[Code]
      ,[Name]
      ,[Note]
      ,[Enabled]
      ,[CreateTime]
      ,[Version]
      FROM [Security].[Systems].[Applications]
    </select>
    <select id="qApplicationId" resultClass="ApplicationDto" parameterClass="string">
      SELECT [ApplicationId] as Id
      ,[Code]
      ,[Name]
      ,[Note]
      ,[Enabled]
      ,[CreateTime]
      ,[Version]
      FROM [Security].[Systems].[Applications]
      where ApplicationId = #Id#
    </select>
    <delete id="dApplicationId"  parameterClass="string">
      Delete
      FROM [Security].[Systems].[Applications]
      where ApplicationId = #Id#
    </delete>
    <insert id="iApplicationId" parameterClass="ApplicationDto">
      INSERT INTO [Security].[Systems].[Applications](ApplicationId,Code,Name,Note,Enabled,CreateTime)
      VALUES (#Id#,#Code#,#Name#,#Note#,#Enabled#,#CreateTime#)
    </insert>
    <update id="uApplicationId" parameterClass="ApplicationDto">
      update [Security].[Systems].[Applications]
      set Code=#Code#,
      Name=#Name#,
      Note=#Note#,
      Enabled=#Enabled#
      where ApplicationId =#Id#
    </update>
    <insert id="InsertOpcGroupItem" parameterClass="Hashtable">
      INSERT INTO [OPC].[dbo].[T_OPC_GroupItem]
      VALUES (#groupid#,#item#,#itemclient#)
    </insert>
    <select id="qMenus" resultClass="Menu" parameterClass="string">
      SELECT  [Id]
      ,[Value]
      ,[Text]
      ,[Icon]
      ,[HasChildren]
      ,[Showcheck]
      ,[Complete]
      ,[Isexpand]
      ,[Checkstate]
      ,[ParentId]
      FROM [Menu]
      where [ParentId]=#ParentId#
    </select>
    <select id="qStaff" resultClass="Staff" parameterClass="Hashtable" cacheModel="TestCache">
      SELECT  [STAFF_NAME]
      ,[STAFF_CARD_NO]
      ,[STAFF_BIRTH]
      ,[STAFF_PHONE]
      ,[HOME_ADDRESS]
      ,[GRADUATION_SCHOOL]
      ,[GRADUATION_DATE]
      ,[STAFF_MAJOR]
      ,[JOB_POSITION]
      ,[SEX]
      FROM [Staff]
      where [SEX]='1'
      and [STAFF_CARD_NO] in 
      (
      select [STAFF_CARD_NO]
      from [Staff]
      where [STAFF_CARD_NO] like '$STAFF_CARD_NO$%'
      )
      <dynamic prepend="and">
        <isNotEmpty prepend="and" property="birthBegin">
          [STAFF_BIRTH] >= #birthBegin#
        </isNotEmpty>
        <isNotEmpty prepend="and" property="birthEnd">
          #birthEnd#>= [STAFF_BIRTH]
        </isNotEmpty>
      </dynamic>
      
    </select>

    <select id="qMoneyOut" parameterClass="MoneyOutQuery" resultClass="MoneyOutDto">
      select A.Id,B.Name,A.Quality,A.OutTime,A.Remark
      from MoneyOut as A
      left outer join MoneyKind as B
      on A.KindType=B.Id
      <dynamic prepend="where">
        <isNotEmpty prepend="and" property="Id">
          A.KindType = #KindType#
        </isNotEmpty>
      </dynamic>
    </select>

    <select id="qMoneyKind" parameterClass="MoneyKindQuery" resultClass="MoneyKindDto">
      SELECT
      T.Id                          AS "Id"
      ,  T.KindType                    AS "KindType"
      ,  T.Name                        AS "Name"
      ,  T.InOrOut                     AS "InOrOut"
      FROM  Study.dbo.MoneyKind  T

    </select>
    <insert id="iMoneyOut" parameterClass="MoneyOut">
      INSERT  INTO  Study.dbo.MoneyOut (
      Quality
      ,  KindType
      ,  OutTime
      ,  Remark
      )
      VALUES  (
      #Quality#
      ,#KindType#
      ,#OutTime#
      ,#Remark#
      )
    </insert>

    <select id="qMoneyOutId" parameterClass="string" resultClass="MoneyOutDto">
      select A.Id as "MoneyOutId",A.KindType as "Id",B.Name,A.Quality,A.OutTime,A.Remark
      from MoneyOut as A
      left outer join MoneyKind as B
      on A.KindType=B.Id
      Where A.Id=#Id#
    </select>

    <update id="uMoneyOut" parameterClass="MoneyOut">
      UPDATE  Study.dbo.MoneyOut
      SET  Quality                        = #Quality#
      ,  KindType                       = #KindType#
      ,  OutTime                        = #OutTime#
      ,  Remark                         = #Remark#
      Where Id=#Id#
    </update>

    <select id="qSportRecord" parameterClass="SportRecordQuery" resultClass="SportRecordDto">
      SELECT T.Id                          AS "Id"
      ,  T.Numbers                     AS "Numbers"
      ,  T.ActivityTime                AS "ActivityTime"
      ,  T.Remark                      AS "Remark"
      ,  S.Name                     AS "SportName"
      FROM  Study.dbo.SportRecord  T  Left join SportKind S
      ON T.ActivityKind = S.Id
      <dynamic prepend="where">
        <isNotNull prepend="and" property="SportFromTime">
          T.ActivityTime  >= #SportFromTime#
        </isNotNull>
        <isNotNull prepend="and" property="SportEndTime">
          #SportEndTime# >= T.ActivityTime
        </isNotNull>
      </dynamic>
    </select>

    <insert id="iSportRecord" parameterClass="SportRecord">
      INSERT  INTO  Study.dbo.SportRecord (
      Numbers
      ,  ActivityTime
      ,  ActivityKind
      ,  Remark
      )  VALUES  (
      #Numbers#
      ,  #ActivityTime#
      ,  #ActivityKind#
      ,  #Remark#
      )

    </insert>

    <select id="qSportRecordId" parameterClass="string" resultClass="SportRecordDto">
      SELECT
      T.Id                          AS "Id"
      ,  S.Id                          AS "ActivityKind"
      ,  S.Name                     AS "SportName"
      ,  T.Numbers                     AS "Numbers"
      ,  T.ActivityTime                AS "ActivityTime"
      ,  T.Remark                      AS "Remark"
      FROM  Study.dbo.SportRecord  T  Left join SportKind S
      ON T.ActivityKind = S.Id
      WHERE  T.Id                           = #Id#
    </select>

    <update id="uSportRecord" parameterClass="SportRecord">
      UPDATE  Study.dbo.SportRecord
      SET  Numbers                        = #Numbers#
      ,  ActivityTime                   = #ActivityTime#
      ,  ActivityKind                   = #ActivityKind#
      ,  Remark                         = #Remark#
      WHERE  Id                             = #Id#
    </update>
    
    <delete id="dSportRecord" parameterClass="string">
      DELETE  FROM  Study.dbo.SportRecord
      WHERE  Id                             = #Id#

    </delete>

    <select id="qSportKind" parameterClass="SportKindQuery" resultClass="SportKindDto">
      SELECT T1.Id AS "Id",T1.Name  AS "Name",T1.Unit AS "Unit"
      FROM  Study.dbo.SportKind  T1
      <dynamic prepend="where">
        <isNotEmpty prepend="and" property="Name">
          T1.Name                         = #Name#
        </isNotEmpty>
      </dynamic>
    </select>

    <select id="qSportKindAll" resultClass="SportKindDto">
      SELECT T1.Id AS "Id",T1.Name  AS "Name",T1.Unit AS "Unit"
      FROM  Study.dbo.SportKind  T1
    </select>

    <select id="qAppuserLogon" parameterClass="AppUsersQuery" resultClass="AppUsersDto">
      SELECT
      T.Id                          AS "Id"
      ,  T.BadgeNo                     AS "BadgeNo"
      ,  T.Name                        AS "Name"
      ,  T.Remark                      AS "Remark"
      ,  T.IsAvailable                 AS "IsAvailable"
      ,  T.LogOnName                   AS "LogOnName"
      ,  T.EmailAddress                AS "EmailAddress"
      ,  T.AppAuthTypeId               AS "AppAuthTypeId"
      ,  T.IsLocked                    AS "IsLocked"
      ,  T.LocalPassword               AS "LocalPassword"
      ,  T.LocalPasswordSetTime        AS "LocalPasswordSetTime"
      ,  T.IsMustChangeLocalPassword   AS "IsMustChangeLocalPassword"
      ,  T.RfidNo                      AS "RfidNo"
      ,  T.PssUserNo                   AS "PssUserNo"
      FROM  Study.dbo.AppUsers  T
      WHERE  T.LogOnName                    = #LogOnName#
      AND  T.LocalPassword                = #LocalPassword#
    </select>
  </statements>
</sqlMap>

